#!/bin/bash

set -u

rebuild=
print_help=
build_mode=release
qbs_profile=pproto_demo
need_packages=

# Директория этого скрипта
script_dir=$(dirname $(readlink -f $0))
echo "script_dir: $script_dir"

jobs=$(nproc)
[ "$jobs" -gt 24 ] && jobs=$(($jobs - 6))
echo "jobs: $jobs"

function display_help()
{
cat << EOF
Usage: ${0##*/}
  -h   display this help and exit
  -r   full rebuild the project
EOF
}

# Обработка позиционных параметров:
#    http://wiki.bash-hackers.org/scripting/posparams
while test -n ${1:-""}
do
    case "$1" in
        -h)
            print_help=yes
            shift
            ;;
        -r)
            rebuild=yes
            shift
            ;;
        -*)
            echo "Error: Unknown option: $1" >&2
            exit 1
            ;;
        *)  # No more options
            #break
            echo "Error: Unknown option: $1" >&2
            exit 1
            ;;
    esac
done

if [ "$print_help" = "yes" ]; then
    display_help
    exit 0
fi

res=$(qbs config --list profiles.$qbs_profile)
if [ -z "$res" ]; then
    echo "Error: Qbs profile '$qbs_profile' not found"
    exit 1
fi

function qbs_param()
{
    qbs config $1 | cut -d' ' -f2 | sed 's/\"//g'
}
qmake_path=$(qbs_param profiles.$qbs_profile.moduleProviders.Qt.qmakeFilePaths)

function check_need_package()
{
    dpkg -s $1 &> /dev/null
    [ "$?" -ne 0 ] && need_packages="$need_packages $1"
}

# Необходимые пакеты
check_need_package 'build-essential'
check_need_package 'libprotobuf-dev'
check_need_package 'protobuf-compiler'

if [ "$qmake_path" = "/usr/bin/qmake" ]; then
    check_need_package 'qt5-default'
    check_need_package 'qt5-qmake'
    check_need_package 'qtbase5-dev'
    check_need_package 'qtbase5-dev-tools'
    check_need_package 'qtbase5-private-dev'
    check_need_package 'qttools5-dev'
    check_need_package 'qttools5-dev-tools'
    check_need_package 'qtdeclarative5-dev'
    check_need_package 'qtdeclarative5-dev-tools'
    check_need_package 'qtdeclarative5-private-dev'
    check_need_package 'qmlscene'
fi

if [ -n "$need_packages" ]; then
    echo "Error: Need to install packages:$need_packages"
    echo "    Use: sudo apt-get install $need_packages"
    echo ""
    exit 1
fi

git_branch=$(git status -b -s | head -n1 | sed 's/\./ /' | cut -d' ' -f2 | sed 's/\//_/g')
build_config=${build_mode}-${git_branch}
build_subdir=${build_config}
build_dir=$script_dir/build/$build_subdir

[ "$rebuild" = "yes"  ] && rm -rf $build_dir

#
# Сборка проекта
#
set -e
qbs build \
    --file pproto_demo_project.qbs \
    --build-directory ./build \
    --command-echo-mode command-line \
    --jobs $jobs \
    --no-install \
    qbs.buildVariant:$build_mode \
    config:$build_config \
    profile:$qbs_profile
